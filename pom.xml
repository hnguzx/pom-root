<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>pers.guzx</groupId>
    <artifactId>pom-root</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <scm>
        <developerConnection></developerConnection>
    </scm>

    <properties>
        <java.version>11</java.version>
        <spring-boot-maven-plugin.version>2.6.7</spring-boot-maven-plugin.version>
        <spring-boot-dependencies.version>2.6.7</spring-boot-dependencies.version>
        <spring-cloud-dependencies.version>2021.0.2</spring-cloud-dependencies.version>

        <mybatis.generator.version>1.3.7</mybatis.generator.version>
        <mysql.jdbc.version>5.1.45</mysql.jdbc.version>
        <mybatis.version>3.5.2</mybatis.version>
        <mybatis.spring.version>2.0.1</mybatis.spring.version>

        <insight.version>${project.version}</insight.version>
        <sharding-sphere.version>4.0.0-RC3</sharding-sphere.version>
        <activiti.version>7.0.75</activiti.version>
        <skipTests>true</skipTests>
        <kryo.version>4.0.2</kryo.version>
        <tomcat.version>9.0.35</tomcat.version>
        <curator.version>4.0.1</curator.version>
        <project.build.outputTimestamp>${git.commit.time}</project.build.outputTimestamp>
        <xxl.job.version>2.3.0-XMVB-SNAPSHOT</xxl.job.version>
        <shiro.version>1.8.0</shiro.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--spring cloud dependencies-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- log -->
            <!-- Needed for Async Logging with Log4j 2 -->
            <dependency>
                <groupId>com.lmax</groupId>
                <artifactId>disruptor</artifactId>
                <version>3.3.6</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>2.9.4</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.0</version>
            </dependency>

            <!-- DB -->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.jdbc.version}</version>
            </dependency>
            <!-- FIXME: 屏蔽调ibatis -->
            <dependency>
                <groupId>org.apache.ibatis</groupId>
                <artifactId>ibatis-core</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis.generator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis.spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mchange</groupId>
                <artifactId>c3p0</artifactId>
                <version>0.9.5.5</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>4.1.4</version>
            </dependency>
            <!-- DB -->

            <!--RPC-->
            <dependency>
                <groupId>org.apache.dubbo</groupId>
                <artifactId>dubbo</artifactId>
                <version>2.7.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>3.4.9</version>
            </dependency>
            <!--RPC-->

            <!-- begin commons -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.9</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.8.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.10.0</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>3.6</version>
            </dependency>
            <!-- end commons -->

            <!-- begin http -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.2</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpmime</artifactId>
                <version>4.5.2</version>
            </dependency>
            <!-- end http -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>1.3.2</version>
            </dependency>
            <!-- json -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.60</version>
            </dependency>
            <dependency>
                <groupId>net.sf.ezmorph</groupId>
                <artifactId>ezmorph</artifactId>
                <version>1.0.6</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>2.8.5</version>
            </dependency>
            <!-- json -->

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>18.0</version>
            </dependency>
            <!-- redis begin -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>2.9.0</version>
            </dependency>
            <dependency>
                <groupId>io.lettuce</groupId>
                <artifactId>lettuce-core</artifactId>
                <version>5.2.1.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.4.3</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-redis</artifactId>
                <version>2.2.3.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-commons</artifactId>
                <version>2.2.3.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-keyvalue</artifactId>
                <version>2.2.3.RELEASE</version>
            </dependency>
            <!-- redis end -->

            <!-- excel -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>2.2.9</version>
            </dependency>
            <!-- excel end -->

            <!-- axis2 -->
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-kernel</artifactId>
                <version>1.7.9</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-adb</artifactId>
                <version>1.7.9</version>
            </dependency>
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-transport-local</artifactId>
                <version>1.7.9</version>
            </dependency>
            <dependency>
                <groupId>org.apache.axis2</groupId>
                <artifactId>axis2-transport-http</artifactId>
                <version>1.7.9</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.3</version>
            </dependency>
            <!-- axis2 -->

            <!--spring cloud 相关-->
            <!--spring cloud dependencies-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.RELEASE</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--zk作为注册中心-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zookeeper-discovery</artifactId>
                <version>${spring.cloud.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>curator-x-discovery</artifactId>
                        <groupId>org.apache.curator</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-x-discovery</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${spring.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${spring.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-netflix-hystrix</artifactId>
                <version>${spring.cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-gson</artifactId>
                <version>8.18.0</version>
            </dependency>
            <dependency>
                <groupId>com.netflix.feign</groupId>
                <artifactId>feign-core</artifactId>
                <version>8.18.0</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign</groupId>
                <artifactId>feign-core</artifactId>
                <version>10.2.3</version>
            </dependency>
            <!--spring cloud 相关-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>org.springframework.web.servlet</artifactId>
                <version>3.1.2.RELEASE</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>cn.springcloud.dubbo</groupId>
                <artifactId>spring-cloud-dubbo-starter</artifactId>
                <version>1.0.0</version>
            </dependency>

            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-core</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-jdbc</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-sphere</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-transaction</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-transaction-core</artifactId>
                <version>3.1.0</version>
            </dependency>
            <dependency>
                <groupId>io.shardingsphere</groupId>
                <artifactId>sharding-jdbc-core</artifactId>
                <version>3.1.0</version>
            </dependency>
            <!-- for spring boot -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-boot-starter</artifactId>
                <version>${sharding-sphere.version}</version>
            </dependency>
            <!-- for spring namespace -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-jdbc-spring-namespace</artifactId>
                <version>${sharding-sphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>sharding-core-api</artifactId>
                <version>${sharding-sphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>3.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.plugin-tools</groupId>
                <artifactId>maven-plugin-annotations</artifactId>
                <version>3.4</version>
            </dependency>

            <!--workflow -->
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-engine</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>org.activiti</groupId>
                <artifactId>activiti-spring-boot-starter</artifactId>
                <version>${activiti.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.1.10</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>4.0.1</version>
            </dependency>
            <!-- insight项目 -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>perfcounter</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <artifactId>fss-provider-api</artifactId>
                <groupId>com.xiaomi.insight</groupId>
                <version>${insight.version}</version>
            </dependency>

            <!--引入TU模块-->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>channel-plugin-transunion</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <!--HiSun模块-->
            <dependency>
                <artifactId>channel-plugin-hisun</artifactId>
                <groupId>com.xiaomi.insight</groupId>
                <version>1.0-SNAPSHOT</version>
            </dependency>

            <!-- 内部 module -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>fss-sdk</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-dao</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-manager</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-provider-api</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-service</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-web</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>aos-task</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <!-- insight项目end -->
            <dependency>
                <groupId>com.xiaomi.fintech</groupId>
                <artifactId>api-sdk</artifactId>
                <version>1.2.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.fintech</groupId>
                <artifactId>api-model</artifactId>
                <version>1.2.0-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>common</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>cms-common</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>cms-dao</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-provider-api</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-plugin-transunion</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>ucenter-client-api</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <!--     insight auto gen db       -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>web-common-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>cms-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-opening-service-api-db-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-info-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-info-service-model-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-opening-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>basic-otp-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-model-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>notification-system-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>data-mart-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>internal-service-proxy-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>marketing-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>enterprise-loan-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <!--     insight auto gen web       -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>file-system-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>passport-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>insight-cms-component-models</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-opening-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-opening-service-model-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>core-banking-service-proxy-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>app-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>notification-system-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>

            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>corporate-account-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>deposit-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>deposit-service-api-db-mybatis-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-info-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>account-info-service-model-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>bootstrapping</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>keycenter-client-lib</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>mybatis-generator-plugin</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>outbound-service-proxy-model-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>passport-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>passport-agent-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>internal-service-proxy-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>uas-service-proxy-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>basic-otp-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>basic-otp-service-model-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>data-mart-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>marketing-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>enterprise-loan-service-api-web-autogen</artifactId>
                <version>${insight.version}</version>
            </dependency>

            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>${kryo.version}</version>
            </dependency>
            <!-- passport项目-->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>vbpassport-sdk</artifactId>
                <version>${insight.version}</version>
            </dependency>

            <!-- basic-otp -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>bos-common</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>bos-service</artifactId>
                <version>${insight.version}</version>
            </dependency>

            <!-- marketing -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>marketing-common</artifactId>
                <version>${insight.version}</version>
            </dependency>

            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>1.6.0</version>
            </dependency>

            <!-- tomcat start -->
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-core</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-el</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat.embed</groupId>
                <artifactId>tomcat-embed-websocket</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <!-- tomcat end -->

            <!-- e2ee begin -->
            <dependency>
                <groupId>com.xiaomi.insight</groupId>
                <artifactId>isprint-e2eea</artifactId>
                <version>${insight.version}</version>
            </dependency>
            <!-- e2ee end -->

            <!-- test -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>1.4.199</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>5.2.4</version>
                <scope>test</scope>
            </dependency>
            <!-- test end -->

            <!--  神策SDK -->
            <dependency>
                <groupId>com.sensorsdata.analytics.javasdk</groupId>
                <artifactId>SensorsAnalyticsSDK</artifactId>
                <version>3.1.15</version>
            </dependency>

            <!-- 重试 -->
            <dependency>
                <groupId>com.github.rholder</groupId>
                <artifactId>guava-retrying</artifactId>
                <version>2.0.0</version>
            </dependency>

            <!-- xxl-job -->
            <dependency>
                <groupId>com.xuxueli</groupId>
                <artifactId>xxl-job-core</artifactId>
                <version>${xxl.job.version}</version>
            </dependency>

            <!-- shiro -->
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <!-- shiro end -->

            <!-- log4j-core -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.16.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>2.16.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>2.16.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-to-slf4j</artifactId>
                <version>2.16.0</version>
            </dependency>
            <!-- log4j-core -->

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>5.3.4</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.2.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <notimestamp>true</notimestamp>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-remote-resources-plugin</artifactId>
                    <version>1.7.0</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>2.3.3.RELEASE</version>
                    <configuration>
                        <outputTimestamp>${project.build.outputTimestamp}</outputTimestamp>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.1</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                        <fork>true</fork>
                        <verbose>true</verbose>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.2</version>
                    <configuration>
                        <skipTests>${skipTests}</skipTests>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.0.2</version>
                    <executions>
                        <execution>
                            <id>analyze</id>
                            <phase>package</phase>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <!-- http://maven.apache.org/components/plugins/maven-dependency-plugin/examples/exclude-dependencies-from-dependency-analysis.html-->
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <ignoreNonCompile>true</ignoreNonCompile>
                                <ignoredUnusedDeclaredDependencies>
                                    <ignoredUnusedDeclaredDependency>org.projectlombok:lombok</ignoredUnusedDeclaredDependency>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                        <!-- 过滤后缀为pem、pfx的证书文件 -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            <nonFilteredFileExtension>jks</nonFilteredFileExtension>
                            <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                            <nonFilteredFileExtension>truststore</nonFilteredFileExtension>
                            <nonFilteredFileExtension>json</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.mybatis.generator</groupId>
                    <artifactId>mybatis-generator-maven-plugin</artifactId>
                    <version>${mybatis.generator.version}</version>
                    <executions>
                        <execution>
                            <id>Generate MyBatis Artifacts</id>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <verbose>true</verbose>
                        <overwrite>true</overwrite>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql.jdbc.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.mybatis.generator</groupId>
                            <artifactId>mybatis-generator-core</artifactId>
                            <version>${mybatis.generator.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.mybatis</groupId>
                            <artifactId>mybatis</artifactId>
                            <version>${mybatis.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>pl.project13.maven</groupId>
                    <artifactId>git-commit-id-plugin</artifactId>
                    <version>4.0.3</version>
                    <executions>
                        <execution>
                            <id>get-the-git-infos</id>
                            <goals>
                                <goal>revision</goal>
                            </goals>
                            <phase>initialize</phase>
                        </execution>
                    </executions>
                    <configuration>
                        <dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
                        <dateFormatTimeZone>Zulu</dateFormatTimeZone>
                        <generateGitPropertiesFile>true</generateGitPropertiesFile>
                        <generateGitPropertiesFilename>${project.build.outputDirectory}/classes/git.commit</generateGitPropertiesFilename>
                        <excludeProperties>
                            <!-- git.build.time is current timestamp so prevents reproducible build -->
                            <excludeProperty>git.build.time</excludeProperty>
                        </excludeProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <id>touch-git-version-file</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <touch file="${project.basedir}/release/classes/GIT.VERSION" />
                                </tasks>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-prod-scripts</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <configuration>
                                <tasks>
                                    <copy todir="${project.basedir}/release/" file="${project.basedir}/release/classes/start.sh" />
                                    <copy todir="${project.basedir}/release/" file="${project.basedir}/release/classes/stop.sh" />
                                    <copy todir="${project.basedir}/release/" file="${project.basedir}/release/classes/check.sh" />
                                    <copy todir="${project.basedir}/release/" file="${project.basedir}/release/classes/GIT.VERSION" />
                                    <copy todir="${project.basedir}/release/deploy/deploy">
                                        <!-- 由于deploy-package的复制目录为copy目录下的内容，所以此处使用deploy/deploy -->
                                        <fileset dir="${project.basedir}/release/classes/deploy" includes="**/*" />
                                    </copy>
                                    <echo file="${project.basedir}/release/build.timestamp" append="false">${git.commit.time}</echo>
                                </tasks>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <distributionManagement>
        <repository>
            <id>release</id>
            <name>Internal Release Repository</name>
            <url>https://pkgs.d.xiaomi.net:443/artifactory/maven-release-virtual</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>https://pkgs.d.xiaomi.net:443/artifactory/maven-snapshot-virtual</url>
        </snapshotRepository>
    </distributionManagement>
</project>
